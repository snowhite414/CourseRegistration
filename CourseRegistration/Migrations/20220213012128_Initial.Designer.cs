// <auto-generated />
using CourseRegistration.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CourseRegistration.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220213012128_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CourseRegistration.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            CourseName = "C# Programming",
                            CourseNumber = "C1",
                            Description = "This course provides an introduction to C# in an integrated development environment using Visual Studio and the Microsoft .NET Core Framework."
                        },
                        new
                        {
                            CourseId = 2,
                            CourseName = ".Net Core",
                            CourseNumber = "NC1",
                            Description = "It explores new Core features for familiar tasks such as testing, logging, data access, and networking."
                        },
                        new
                        {
                            CourseId = 3,
                            CourseName = "ASP. Net Core",
                            CourseNumber = "ANC1",
                            Description = "The focus of the course is on creating applications with ASP.NET Core in order to build full stack Single Page Applications and REST APIs."
                        },
                        new
                        {
                            CourseId = 4,
                            CourseName = "FrontEnd Framework",
                            CourseNumber = "ANC1",
                            Description = "Students will learn to develop dynamic Single Page Web Applications using three of today’s most popular front-end frameworks: Angular, React, and Vue."
                        });
                });

            modelBuilder.Entity("CourseRegistration.Models.Instructor", b =>
                {
                    b.Property<int>("InstructorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InstructorId");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            InstructorId = 1,
                            CourseId = 1,
                            EmailAddress = "mlund@yahoo.com",
                            FirstName = "Michelle",
                            LastName = "Lund"
                        },
                        new
                        {
                            InstructorId = 2,
                            CourseId = 2,
                            EmailAddress = "roblox@gmail.com",
                            FirstName = "Jason",
                            LastName = "Capa"
                        },
                        new
                        {
                            InstructorId = 3,
                            CourseId = 3,
                            EmailAddress = "ADiaby@gmail.com",
                            FirstName = "Abraham",
                            LastName = "Diaby"
                        },
                        new
                        {
                            InstructorId = 4,
                            CourseId = 4,
                            EmailAddress = "Sniper@gmail.com",
                            FirstName = "Gabriel",
                            LastName = "Monzon"
                        });
                });

            modelBuilder.Entity("CourseRegistration.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("StudentId");

                    b.HasIndex("CourseId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            CourseId = 1,
                            EmailAddress = "cookie@gmail.com",
                            FirstName = "Rhiane",
                            LastName = "Cruz",
                            PhoneNumber = 1111234
                        },
                        new
                        {
                            StudentId = 2,
                            CourseId = 2,
                            EmailAddress = "minecraft@gmail.com",
                            FirstName = "Kassandra",
                            LastName = "Ruiz",
                            PhoneNumber = 2221234
                        },
                        new
                        {
                            StudentId = 3,
                            CourseId = 3,
                            EmailAddress = "music@gmail.com",
                            FirstName = "Leann",
                            LastName = "Rymes",
                            PhoneNumber = 3331234
                        },
                        new
                        {
                            StudentId = 4,
                            CourseId = 4,
                            EmailAddress = "lparas@gmail.com",
                            FirstName = "Luisa",
                            LastName = "Paras",
                            PhoneNumber = 4441234
                        });
                });

            modelBuilder.Entity("CourseRegistration.Models.Student", b =>
                {
                    b.HasOne("CourseRegistration.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });
#pragma warning restore 612, 618
        }
    }
}
